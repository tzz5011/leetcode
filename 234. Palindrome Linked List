# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def isPalindrome(self, head):
        """
        :type head: ListNode
        :rtype: bool
        """
        if not head or not head.next:
            return True
        fast = slow = cur = head
        while fast and fast.next:
            fast = fast.next.next
            slow = slow.next
        stack = [];
        while slow:
            stack.append(slow.val)
            slow = slow.next
        while stack:
            if stack.pop() != cur.val:
                return False
            cur = cur.next
        return True
